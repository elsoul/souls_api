JsonAuth
JsonAuth.instance_methods
JsonWebToken.encode "hey"
include JsonAuth
token = JsonWebToken.encode(user_id: 1)
token = JsonWebToken.encode("user_id")
token = JsonWebToken.encode(12355)
token = JsonWebToken.encode 1
token = JsonWebToken.encode user_id: 1
token = "eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxLCJleHAiOjE2MDk3NTc4NTR9.Ed20t5N4vFEY8HBTiTvXYqHf3H5B_vOF-EyNGbQy2KE"
token = JsonWebToken.decode token
token = JsonWebToken.encode hey: 234
token = JsonWebToken.encode hey: 234
JsonAuth
token = JsonWebToken.encode hey: 234
include JsonAuth
token = JsonWebToken.encode hey: 234
JsonWebToken.decode token
token = JsonWebToken.encode hey: 234, exp: nil
JsonWebToken.decode token
nil.to_i
JWT.encode({hey: 1}, "h")
t = JWT.encode({hey: 1}, "h")
JsonWebToken.decode t
JsonWebToken.decode token
JsonWebToken.decode t
t
JWT.decode(t, "h")
include JsonAuth
token = JsonWebToken.encode hey: 234, exp: nil
JsonWebToken.decode token
token = JsonWebToken.encode hey: 234, nil
token = JsonWebToken.encode({hey: 234}, nil)
token = JsonWebToken.encode({hey: 234})
JsonWebToken.decode token
include JsonAuth
token = JsonWebToken.encode({hey: 234})
ruby -v
p 0
p 0.zero?
p nil.zero?
p nil.to_i.zero?
include JsonAuth
token = JsonWebToken.encode({hey: 234})
JsonWebToken.decode token
JWT.encode({hey: 12},"a")
a=JWT.encode({hey: 12},"a")
JWT.decode a
JWT.decode(a, "a")
exp = 24.hours.from_now
exp.to_i
p 1 unless exp.to_i.zero?
exp = 0
p 1 unless exp.to_i.zero?
include JsonAuth
token = JsonWebToken.encode({hey: 234})
JsonWebToken.decode token
include JsonAuth
token = JsonWebToken.encode({hey: 234, exp: 0})
JsonWebToken.decode token
include JsonAuth
token = JsonWebToken.encode({hey: 234, exp: 0})
JsonWebToken.decode token
payload
payload = {a: 1, b:3}
payload.delete(:b)
payload
include JsonAuth
token = JsonWebToken.encode({hey: 234, exp: 0})
token = JsonWebToken.encode({hey: 234, exp: 2222})
token = JsonWebToken.encode({hey: 234}, 2222)
token = JsonWebToken.encode({hey: 234}, 2222)
token = JsonWebToken.encode({hey: 234}, 0)
token = JsonWebToken.encode(hey: 234, 0)
token = JsonWebToken.encode({hey: 234}, 0)
token = JsonWebToken.encode({hey: 234}, 11111111111111)
JsonWebToken.decode token
a = JsonWebToken.decode token
a[:hey]
token = JsonWebToken.encode({hey: 234}, 10)
JsonWebToken.decode token
token = JsonWebToken.encode({hey: 234}, 10)
token = JsonWebToken.encode({user_id: xxxxxxxx})
token = JsonWebToken.encode({user_id: 1})
JsonWebToken.decode token
